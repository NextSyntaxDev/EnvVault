server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /cert/fullchain.pem;
    ssl_certificate_key /cert/privkey.pem;

    # 游닍 Assets do Next.js (JS, CSS, etc.)
    location ^~ /_next/ {
        proxy_pass http://next:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 游깷 Frontend (Next.js) - prioridade m치xima no /
    # Isso captura todas as requisi칞칫es para o frontend, incluindo p치ginas din칙micas.
    location / {
        proxy_pass http://next:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 游대 API - rotas do backend, agora ajustamos para garantir que /env seja para o backend
    location ~ ^/env(/.*)?$ {
        proxy_pass https://host.docker.internal:8080;  # Passa para o backend que est치 no IP da m치quina host
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Rota /envs ser치 tratada pelo frontend (Next.js)
    location ^~ /envs {
        proxy_pass http://next:3000;  # Direciona para o Next.js
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 游대 API - outras rotas do backend
    location ~ ^/(auth/login|users) {
        proxy_pass https://host.docker.internal:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
