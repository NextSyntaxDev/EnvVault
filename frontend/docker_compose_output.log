Compose can now delegate builds to bake for better performance.
 To do so, set COMPOSE_BAKE=true.
#0 building with "desktop-linux" instance using docker driver

#1 [next internal] load build definition from Dockerfile
#1 transferring dockerfile: 463B 0.0s done
#1 DONE 0.0s

#2 [next internal] load metadata for docker.io/library/node:18-slim
#2 ...

#3 [next auth] library/node:pull token for registry-1.docker.io
#3 DONE 0.0s

#2 [next internal] load metadata for docker.io/library/node:18-slim
#2 DONE 1.3s

#4 [next internal] load .dockerignore
#4 transferring context: 52B done
#4 DONE 0.0s

#5 [next builder 1/6] FROM docker.io/library/node:18-slim@sha256:f9ab18e354e6855ae56ef2b290dd225c1e51a564f87584b9bd21dd651838830e
#5 DONE 0.0s

#6 [next internal] load build context
#6 transferring context: 364.64kB 0.0s done
#6 DONE 0.0s

#7 [next builder 2/6] WORKDIR /app
#7 CACHED

#8 [next builder 3/6] COPY package*.json ./
#8 CACHED

#9 [next builder 4/6] RUN npm install
#9 CACHED

#10 [next builder 5/6] COPY . .
#10 DONE 0.1s

#11 [next builder 6/6] RUN npm run build
#11 0.559 
#11 0.559 > frontend@0.1.0 build
#11 0.559 > next build
#11 0.559 
#11 1.448 Attention: Next.js now collects completely anonymous telemetry regarding usage.
#11 1.449 This information is used to shape Next.js' roadmap and prioritize features.
#11 1.449 You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:
#11 1.449 https://nextjs.org/telemetry
#11 1.449 
#11 1.551    ▲ Next.js 15.1.7
#11 1.551 
#11 1.557    Linting and checking validity of types ...
#11 4.346 
#11 4.346 ./src/pages/envs/index.tsx
#11 4.346 50:6  Warning: React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.  react-hooks/exhaustive-deps
#11 4.346 
#11 4.346 info  - Need to disable some ESLint rules? Learn more here: https://nextjs.org/docs/app/api-reference/config/eslint#disabling-rules
#11 6.070    Creating an optimized production build ...
#11 16.91  ✓ Compiled successfully
#11 16.92    Collecting page data ...
#11 19.44    Generating static pages (0/5) ...
#11 20.23    Generating static pages (1/5) 
#11 20.23    Generating static pages (2/5) 
#11 20.23    Generating static pages (3/5) 
#11 20.23  ✓ Generating static pages (5/5)
#11 20.90    Finalizing page optimization ...
#11 20.90    Collecting build traces ...
#11 31.01 
#11 31.02 Route (pages)                              Size     First Load JS
#11 31.02 ┌ ○ /                                      5.27 kB         281 kB
#11 31.02 ├   └ css/f30152c0704fba31.css             608 B
#11 31.02 ├   /_app                                  0 B             276 kB
#11 31.02 ├ ○ /404                                   189 B           276 kB
#11 31.02 ├ ○ /envs (315 ms)                         20.2 kB         338 kB
#11 31.02 └ ○ /login (303 ms)                        4.17 kB         322 kB
#11 31.02 + First Load JS shared by all              283 kB
#11 31.02   ├ chunks/framework-a4ddb9b21624b39b.js   57.5 kB
#11 31.02   ├ chunks/main-9bc4bad2c261d135.js        33.9 kB
#11 31.02   ├ chunks/pages/_app-676b7a717416da30.js  183 kB
#11 31.02   └ other shared chunks (total)            8.65 kB
#11 31.02 
#11 31.02 ƒ Middleware                               32 kB
#11 31.02 
#11 31.02 ○  (Static)  prerendered as static content
#11 31.02 
#11 DONE 31.1s

#7 [next builder 2/6] WORKDIR /app
#7 CACHED

#12 [next stage-1 3/3] COPY --from=builder /app /app
#12 DONE 4.0s

#13 [next] exporting to image
#13 exporting layers
#13 exporting layers 6.6s done
#13 writing image sha256:07a1a8fd6a7aee2294409d77a68db43a16f41b5eef99a6375091f7a7f6600068 done
#13 naming to docker.io/library/frontend-next done
#13 DONE 6.6s

#14 [next] resolving provenance for metadata file
#14 DONE 0.0s

#15 [nginx internal] load build definition from Dockerfile
#15 transferring dockerfile: 624B done
#15 DONE 0.0s

#16 [nginx internal] load metadata for docker.io/library/nginx:1.28-alpine
#16 ...

#17 [nginx auth] library/nginx:pull token for registry-1.docker.io
#17 DONE 0.0s

#16 [nginx internal] load metadata for docker.io/library/nginx:1.28-alpine
#16 DONE 1.2s

#18 [nginx internal] load .dockerignore
#18 transferring context: 2B done
#18 DONE 0.0s

#19 [nginx 1/5] FROM docker.io/library/nginx:1.28-alpine@sha256:d83c0138ea82c9f05c4378a5001e0c71256b647603c10c186bd7697a4db722d3
#19 DONE 0.0s

#20 [nginx internal] load build context
#20 transferring context: 575B done
#20 DONE 0.0s

#21 [nginx 3/5] RUN mkdir -p /etc/nginx/certs
#21 CACHED

#22 [nginx 2/5] RUN apk add --no-cache openssl
#22 CACHED

#23 [nginx 4/5] COPY entrypoint.sh /entrypoint.sh
#23 CACHED

#24 [nginx 5/5] RUN chmod +x /entrypoint.sh
#24 CACHED

#25 [nginx] exporting to image
#25 exporting layers done
#25 writing image sha256:3262932eedf0ba220a581329f822ff68d8fa3e0cca764c0742198a736401579c done
#25 naming to docker.io/library/frontend-nginx done
#25 DONE 0.0s

#26 [nginx] resolving provenance for metadata file
#26 DONE 0.0s
 next  Built
 nginx  Built
 Network frontend_app-network  Creating
 Network frontend_app-network  Created
 Container next  Creating
 Container next  Created
 Container nginx  Creating
 Container nginx  Created
 Container next  Starting
 Container next  Started
 Container nginx  Starting
 Container nginx  Started
